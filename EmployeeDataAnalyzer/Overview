-> Employee Data Analyzer Project in Java

    In Java, an employee data analyzer system allows us to manage and analyze
    employee data, such as names, departments, and salaries, in an organized
    and efficient way. This project helps us to learn important Java concepts
    such as object-oriented programming, handling exceptions, multithreading,
    and data manipulation.

* Before moving further, let's first understand how this system is going to work.

    -> Working of Employee Data Analyzer
        * First, we will declare an Employee class which represents the employee's details
        like ID, name, department, and salary.

        * We define EmployeeManager class, which will manage employee data by adding,
        retrieving, filtering, and sorting employee details.

        * We will use the most important concept which is multithreading in Java,
        it is used to make the system more efficient and to process employee data concurrently.
        Each employee's data will be processed in separate threads.

        * Weâ€™ll also implement error handling using custom exceptions, so that we can
        properly handle cases where an employee's data is not found.

-> Now, let's explore the structure of our system and the key components of the project

    -> We have organized the project into the following components:

        * Employee.java: This class holds the details of an employee.

        * EmployeeManager.java: This class is responsible for managing the employee data,
        including adding, fetching, filtering, and sorting employees.

        * EmployeeProcessor.java: This class process employee data in a separate thread.

        * EmployeeNotFoundException.java: A custom exception that will be thrown when
        an employee is not found in the system.

        * EmployeeDataAnalyzer.java: This is the main class that handles everything
        together and shows how the system works together.

-> How to Run the project?

    -> To run the project on IntelliJ IDEA we just need to follow these steps which
    are listed below:

        1. Open IntelliJ IDEA and create a new Java project.
        2. Start creating the packages and the structure must be look like this:
            * Employee.java
            * EmployeeManager.java
            * EmployeeProcessor.java
            * EmployeeNotFoundException.java
            * EmployeeDataAnalyzer.java
        3. Create the classes and interface in the correct packages
        4. Save all the files.
        5. Run the main class that is in EmployeeDataAnalyzer.java file